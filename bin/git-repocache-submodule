#!/bin/sh

# git-repocache-submodule
#
# Copyright (c) 2013 - 2014, Andrew Keller
#
# This is a plumbing command.  For a more user-friendly version, see `git-su`.
#
# Invokes `git submodule`, passing all of the provided arguments.  Amongst the
# provided arguments, this script adds a --reference parameter pointing to the
# repocache.
#
# Because only `git submodule add` and `git submodule update` take a --reference
# parameter, this command only works with those commands.
#
# This script operates with the philosophy that using references long-term is a
# bad idea.  At the conclusion of this script, if any of the submodules are
# using references, this script automatically calls `git disconnect-alternates`
# in each of the submodules.  In theory, use cases exist where this may be
# undesirable, but at the moment, such use cases are not supported.  To support
# them, this script need only add a --no-disconnect-alternates option.

REPOCACHE_DIR=$(git repocache-path) || exit $?

RECURSIVE_ARG=

for arg in "$@"
do
if [ "$arg" == "--recursive" ]
then
RECURSIVE_ARG=$arg
break
fi
done

git submodule "$@" --reference "$REPOCACHE_DIR" || exit $?

function cat_alternates()
{
    git submodule --quiet foreach $1 git rev-parse --git-dir |
    perl -pne 'chomp; $_ = "$_/objects/info/alternates\0";' |
    xargs -0 -n 1 sh -c 'if [ -e "$1" ]; then cat "$1"; fi' inline
}

if [ ! -z "$(cat_alternates $RECURSIVE_ARG)" ]
then
    echo >&2
    echo "Repacking..." >&2
    echo >&2

    git submodule foreach $RECURSIVE_ARG git disconnect-alternates || exit $?
fi
